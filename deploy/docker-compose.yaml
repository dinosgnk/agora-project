services:
  postgres:
    image: postgres:17-alpine
    container_name: agora-postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_pass
      POSTGRES_DB: AgoraDB
    ports:
      - "5432:5432"
    volumes:
      - ../database/init:/docker-entrypoint-initdb.d
    networks:
      - agora-network

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: agora-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - agora-network
    restart: unless-stopped

  catalog-service:
    build:
      context: ..
      dockerfile: internal/services/catalog/Dockerfile.development
    container_name: agora-catalog-service
    environment:
      - ENVIRONMENT=Development
      - PORT=5000
      - DB_HOST=agora-postgres
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=admin_pass
      - DB_NAME=AgoraDB
    ports:
      - "8081:5000"
    networks:
      - agora-network
    restart: unless-stopped

  cart-service:
    build:
      context: ..
      dockerfile: internal/services/cart/Dockerfile.development
    container_name: agora-cart-service
    environment:
      - ENVIRONMENT=Development
      - PORT=5000
    ports:
      - "8082:5000"
    networks:
      - agora-network
    restart: unless-stopped

  order-service:
    build:
      context: ..
      dockerfile: internal/services/order/Dockerfile.development
    container_name: agora-order-service
    environment:
      - ENVIRONMENT=Development
      - PORT=5000
      - SERVICE_NAME=order-service
      - DB_HOST=agora-postgres
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=admin_pass
      - DB_NAME=AgoraDB
      - RABBITMQ_HOST=agora-rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    ports:
      - "8083:5000"
    networks:
      - agora-network
    restart: unless-stopped
    depends_on:
      - postgres
      - rabbitmq

  notification-service:
    build:
      context: ..
      dockerfile: internal/services/notification/Dockerfile.development
    container_name: agora-notification-service
    environment:
      - ENVIRONMENT=Development
      - PORT=5000
      - SERVICE_NAME=notification-service
      - RABBITMQ_HOST=agora-rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    ports:
      - "8084:5000"
    networks:
      - agora-network
    restart: unless-stopped
    depends_on:
      - rabbitmq

  prometheus:
    image: prom/prometheus:latest
    container_name: agora-prometheus
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - agora-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: agora-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin_pass
    ports:
      - "3000:3000"
    volumes:
      - agora-grafana-data:/var/lib/grafana
    networks:
      - agora-network
    restart: unless-stopped

volumes:
  agora-grafana-data:

networks:
  agora-network:
    driver: bridge